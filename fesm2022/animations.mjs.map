{"version":3,"file":"animations.mjs","sources":["../../../../../k8-fastbuild-ST-199a4f3c4e20/bin/packages/platform-browser/animations/src/providers.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {\n  AnimationDriver,\n  NoopAnimationDriver,\n  ɵAnimationEngine as AnimationEngine,\n  ɵAnimationRendererFactory as AnimationRendererFactory,\n  ɵAnimationStyleNormalizer as AnimationStyleNormalizer,\n  ɵWebAnimationsDriver as WebAnimationsDriver,\n  ɵWebAnimationsStyleNormalizer as WebAnimationsStyleNormalizer,\n} from '@angular/animations/browser';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ANIMATION_MODULE_TYPE,\n  inject,\n  Inject,\n  Injectable,\n  NgZone,\n  OnDestroy,\n  Provider,\n  RendererFactory2,\n} from '@angular/core';\nimport {ɵDomRendererFactory2 as DomRendererFactory2} from '../../index';\n\n@Injectable()\nexport class InjectableAnimationEngine extends AnimationEngine implements OnDestroy {\n  // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n  // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n  // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n  constructor(\n    @Inject(DOCUMENT) doc: Document,\n    driver: AnimationDriver,\n    normalizer: AnimationStyleNormalizer,\n  ) {\n    super(doc, driver, normalizer);\n  }\n\n  ngOnDestroy(): void {\n    this.flush();\n  }\n}\n\nexport function instantiateDefaultStyleNormalizer() {\n  return new WebAnimationsStyleNormalizer();\n}\n\nexport function instantiateRendererFactory() {\n  return new AnimationRendererFactory(\n    inject(DomRendererFactory2),\n    inject(AnimationEngine),\n    inject(NgZone),\n  );\n}\n\nconst SHARED_ANIMATION_PROVIDERS: Provider[] = [\n  {provide: AnimationStyleNormalizer, useFactory: instantiateDefaultStyleNormalizer},\n  {provide: AnimationEngine, useClass: InjectableAnimationEngine},\n  {\n    provide: RendererFactory2,\n    useFactory: instantiateRendererFactory,\n  },\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nexport const BROWSER_NOOP_ANIMATIONS_PROVIDERS: Provider[] = [\n  {provide: AnimationDriver, useClass: NoopAnimationDriver},\n  {provide: ANIMATION_MODULE_TYPE, useValue: 'NoopAnimations'},\n  ...SHARED_ANIMATION_PROVIDERS,\n];\n\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nexport const BROWSER_ANIMATIONS_PROVIDERS: Provider[] = [\n  // Note: the `ngServerMode` happen inside factories to give the variable time to initialize.\n  {\n    provide: AnimationDriver,\n    useFactory: () =>\n      typeof ngServerMode !== 'undefined' && ngServerMode\n        ? new NoopAnimationDriver()\n        : new WebAnimationsDriver(),\n  },\n  {\n    provide: ANIMATION_MODULE_TYPE,\n    useFactory: () =>\n      typeof ngServerMode !== 'undefined' && ngServerMode ? 'NoopAnimations' : 'BrowserAnimations',\n  },\n  ...SHARED_ANIMATION_PROVIDERS,\n];\n"],"names":["InjectableAnimationEngine","AnimationEngine","constructor","normalizer","ngOnDestroy","flush","ɵfac","i0","ɵɵngDeclareFactory","minVersion","version","ngImport","type","deps","token","DOCUMENT","i1","AnimationDriver","ɵAnimationStyleNormalizer","target","ɵɵFactoryTarget","Injectable","ɵprov","ɵɵngDeclareInjectable","ctorParameters","Document","decorators","Inject","inject","DomRendererFactory2","NgZone","provide","AnimationStyleNormalizer","useFactory","instantiateDefaultStyleNormalizer","RendererFactory2","instantiateRendererFactory","BROWSER_NOOP_ANIMATIONS_PROVIDERS"],"mappings":";;;;;;;;;;;;;;;AA+BM,MAAAA,yBAAA,SAAAC,gBAAA,CAAA;AAqBNC,EAAAA,yBAA0CC,UAAA,EAAA;;;AAQ1CC,EAAAA;AACE,IAAA,IAAA,CAAAC,KAAA,EAAA;AACA;AACA,EAAA,OAAAC,IAAA,GAAAC,EAAA,CAAAC,kBAAA,CAAA;IAAAC,UAAA,EAAA,QAAA;IAAAC,OAAA,EAAA,mBAAA;AAAAC,IAAAA,QAAA,EAAAJ,EAAA;AAAAK,IAAAA,IAAA,EAAAZ,yBAAA;IAAAa,IAAA,EAAA,CAAA;AAAAC,MAAAA,KAAA,EAAAC;AAAA,KAAA,EAAA;MAAAD,KAAA,EAAAE,EAAA,CAAAC;AAAA,KAAA,EAAA;MAAAH,KAAA,EAAAE,EAAA,CAAAE;AAAA,KAAA,CAAA;AAAAC,IAAAA,MAAA,EAAAZ,EAAA,CAAAa,eAAA,CAAAC;AAAA,GAAA,CAAA;AACE,EAAA,OAAAC,KACsC,GAAAf,EACvC,CAAAgB,qBACF,CAAA;IAAAd,UAAA,EAAA,QAAA;IAAAC,OAAA,EAAA,mBAAA;AAAAC,IAAAA,QAAA,EAAAJ,EAAA;AAAAK,IAAAA,IAAA,EAAAZ;AAAA,GAAA,CAAA;;;;;;;;AAMKY,IAAAA,IAAO,EAAAS;AACX,GAAA,CAAA;gBAAU,EAAAG,MAAA,CAAA;AAAAZ,IAAAA,IAAA,EAAAa,QAAA;IAAAC,UAAA,EAAA,CAAA;AACVd,MAAAA,IAAA,EAAAe,MAAA;;;;;;;;;;;;;sCAVE,CAAAC,MAAA,CAAAC,mBAAA,CAAAD,EAAAA,MAAA,CAAA3B,gBAAA,CAAA,EAAA2B,MAAA,CAAAE,MAAA,CAAA,CAAA;;AAcJ,MAAA,0BAAA,GAAA,CAAA;AAAAC,EAAAA,OAAA,EAAAC,yBAAA;AAAAC,EAAAA,UAAA,EAAAC;AAAA;;;;AAIMH,EAAAA,OAAA,EAAOI,gBAAA;YACiF,EAAAC;CAQ5F,CAAA;AAMDC,MAAAA,iCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}